{"version":3,"sources":["config/fbConfig.js","components/layout/SignInLink.js","store/actions/authActions.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignOutLinks","state","console","log","links","uid","SignInLink","SignOutLink","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","toDateString","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ff0a2ab.chunk.js","sourcesContent":[" import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n\r\n // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBKdyXx3hlzXVHK4QcBBunqsUFxe-BAq5s\",\r\n    authDomain: \"my-planner-7e87a.firebaseapp.com\",\r\n    databaseURL: \"https://my-planner-7e87a.firebaseio.com\",\r\n    projectId: \"my-planner-7e87a\",\r\n    storageBucket: \"my-planner-7e87a.appspot.com\",\r\n    messagingSenderId: \"508579461820\",\r\n    appId: \"1:508579461820:web:f15d9163b0247b8d5daeb9\",\r\n    measurementId: \"G-QFV726RB7C\",\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  // initialize Firestore\r\n  firebase.firestore();\r\n\r\n  // firebase.firestore().settings({ timestampsInSnapshots:true });\r\n\r\n  export default firebase; ","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a href=\"/\" onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: ()=>{ dispatch(signOut())}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks);","\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:\"LOGIN_SUCCESS\"});\r\n        }).catch((err)=> {\r\n            dispatch({type:\"LOGIN_ERROR\", err});\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:\"SIGNOUT_SUCCESS\"});\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signUp =  (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            }).then(()=>{\r\n                dispatch({type: 'SIGNUP_SUCCESS'})\r\n            })\r\n        }).catch((err)=>{                \r\n            dispatch({type:'SIGNUP_ERROR', err})\r\n        });\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignInLink from './SignInLink';\r\nimport SignOutLink from './SignOutLink';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? (<SignInLink profile={profile}/>) : (<SignOutLink/>)\r\n    \r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">My Planner</Link>\r\n                {auth.isLoaded && links}\r\n            </div>\r\n        \r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state);\r\n    \r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst  Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notification</span>\r\n                    <ul className='notifications'>\r\n                        { notifications && notifications.map (item =>{\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className='pink-text'>{item.user}</span>\r\n                                    <p><span>{item.content}</span></p>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                    <br/>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function ProjectSummary({project}) {\r\n    return (\r\n          <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\r\n                </div>\r\n        </div>  \r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project =>{\r\n                return (\r\n                    <Link to={'/project/'+ project.id} key={project.id}>\r\n                    <ProjectSummary project={project}></ProjectSummary>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props);\r\n        const {projects, auth, notifications} = this.props;\r\n        if (!auth.uid) return < Redirect to=\"/signin\" />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}></ProjectList>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}></Notifications>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects', limit:10, orderBy:['createAt','desc']},\r\n        {collection:'notifications', limit:3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ProjectDetails = (props)=> {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return (<Redirect to='/signin'/>) \r\n\r\n    if (project){\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        {project.title} - {project.id}\r\n                    </span>\r\n                    <p>\r\n                        {project.content}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{project.createAt.toDate().toDateString()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        }) \r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName: '',\r\n        lastName: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        }) \r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.props);\r\n        \r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return (<Redirect to='/' />);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst  mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","export const createProject = (project) =>{\r\n    return (dispatch, getState, { getFirebase, getFirestore })=>{\r\n        //make async call to database\r\n        const firestore =  getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type: 'CREATE_PROJECT', project: project});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR', err});\r\n        })\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject } from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        }) \r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state); \r\n\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if (!auth.uid) return (<Redirect to=\"/signin\"/>)\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        createProject: (project)=>{\r\n            dispatch(createProject(project))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state= initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success'); \r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n            \r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error');\r\n            return {\r\n                ...state, \r\n                authError: action.err.message\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id:'1', title:'title 1', content: \"blah blah blah\"},\r\n        {id:'2', title:'title 2', content: \"blah blah blah\"},\r\n        {id:'3', title:'title 3', content: \"blah blah blah\"},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state= initState, action)=>{\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;            \r\n    }\r\n\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import { createStore, applyMiddleware, compose } from 'redux'\n// import rootReducer from './store/reducers/rootReducer'\n// import { Provider } from 'react-redux'\n// import thunk from 'redux-thunk'\n// import { reduxFirestore, getFirestore } from 'redux-firestore';\n// import { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\n// import fbConfig from './config/fbConfig'\n\n// const store = createStore(rootReducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n//     reactReduxFirebase(fbConfig), // redux binding for firebase\n//     reduxFirestore(fbConfig) // redux bindings for firestore\n//   )\n// );\n\n// ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// serviceWorker.unregister();\n\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from './config/fbConfig';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './store/reducers/rootReducer';\n\n// We enhance compose in order to use Redux DevTools extension\n// https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\nconst rrfConfig = {\n  // attachAuthIsReady: true,\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  userProfile: 'users',\n};\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n};\n\nReactDOM.render(\n  <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n  </Provider>,\ndocument.getElementById('root'),\n);\n\n\n\n\n\n\n// console.log('store', store);\n// console.log('state', store.getState());\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}